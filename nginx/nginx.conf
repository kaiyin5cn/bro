events {
    worker_connections 1024;
}

http {
    # Temp directories
    client_body_temp_path temp/client_body_temp;
    proxy_temp_path temp/proxy_temp;
    fastcgi_temp_path temp/fastcgi_temp;
    uwsgi_temp_path temp/uwsgi_temp;
    scgi_temp_path temp/scgi_temp;

    # Upstream backend servers
    upstream backend {
        least_conn;
        server 127.0.0.1:8828 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:8829 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:8830 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:8831 max_fails=3 fail_timeout=30s;
    }

    # Health check configuration
    upstream backend_health {
        server 127.0.0.1:8828;
        server 127.0.0.1:8829;
        server 127.0.0.1:8830;
        server 127.0.0.1:8831;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=shorten:10m rate=10r/s;

    # Main server block
    server {
        listen 80;
        server_name localhost;

        # Enable gzip compression
        gzip on;
        gzip_types text/plain application/json application/javascript text/css;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        # Health check endpoint (bypass load balancer)
        location /health {
            access_log off;
            proxy_pass http://backend_health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # API endpoints with rate limiting
        location /auth {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /admin {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # URL shortening with stricter rate limiting
        location /shorten {
            limit_req zone=shorten burst=5 nodelay;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Short URL redirects (high performance)
        location ~ "^/[a-zA-Z0-9]{7}$" {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache settings for redirects
            proxy_cache_bypass $http_pragma;
            proxy_cache_revalidate on;
        }

        # Static files (if serving frontend through NGINX)
        location /static/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Default location
        location / {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # NGINX status page for monitoring
    server {
        listen 8080;
        server_name localhost;
        
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
    }
}